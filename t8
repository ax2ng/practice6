# В анкетах сотрудников некоторого учреждения имеются следующие сведения:
# фамилия, год рождения, должность (мастер, инженер, рабочий и т.д.), стаж, образование.
# Вывести фамилии мастеров с высшим образованием и вычислить их средний стаж.
# Выполнить сортировку списка. ВАРИАНТ 4

from tabulate import tabulate
import csv


def write_csv(headers: list, data: list) -> None:  # функция ничего не возвращает
    """
    Записывает данные в CSV файл и выводит
    структурированные данные, введенные пользователем

    :param headers: - Заголовки выводимой таблицы
    :param data: - Пользовательские данные
    """
    print(tabulate(data, headers, tablefmt="grid"))  # grid - стиль отображения таблички
    text = ""
    for i in data:
        text += ','.join(map(str, i)) + '\n'  # join соединяет элементы списка в строку, \n для перевода строки
    open('file.csv', 'w').write(text)  # open открывает файл для записи


def worker(num: int) -> tuple:
    """
    Функцbя которая создает работника

    :param num:
    :return tuple:
    """
    print("Работник №", num, sep="")  # sep добавляет разделитель между строками для печати.
    surname = input("Фамилия: ")
    year = input("Год рождения: ")
    dolj = input("Должность: ")
    while True:
        try:
            staj = int(input("Стаж: "))
            break
        except:
            pass
    obr = input("Образование: ")
    return (surname, year, dolj, staj, obr)


def start() -> None:
    while True:
        try:
            count = int(input("Количество работников: "))
            break
        except:
            pass

    workers = []  # создаем списки
    vysh_obr = []
    for i in range(count):
        workers.append(worker(i + 1))  # добавляем в списки элементы

    for i in workers:
        if i[4].lower() == "высшее" and i[2].lower() == "мастер":  # преобразование строки в нижний регистр
            vysh_obr.append(i)
    try:
        print("Средний стаж работников с высшим: ", sum([i[3] for i in vysh_obr]) / len(vysh_obr))
        # sum суммирует список числовых значений, len возвращает количество элементов в обьекте
    except:
        pass

    print("\nСортировка по стажу:")
    write_csv(["Фамилия", "Год рождения", "Должность", "Стаж", "Образование"],
              sorted(workers, key=lambda x: x[3], reverse=True))
# сортирует в обр.порядке
#  лямбда функции нужна для того, чтобы фильровать по третьему элементу


if __name__ == "__main__":  # позволяет разделить код, который будет выполняться
    start()
